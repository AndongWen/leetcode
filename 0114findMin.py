'''153寻找旋转排序数组的最小值：
	假设按照升序排序的数组在预先未知的某个点上进行了旋转。

( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。

请找出其中最小的元素。

你可以假设数组中不存在重复元素'''
'''思路:排序数组旋转后，那个点成为变换点，变化点左侧元素大于等于
		数组第一个元素；变化点右侧元素小于数组第一个元素。每次
		二分要保证将变化点左侧的第一个元素包含'''
class Solution():
	def findMin(self, nums):
		l, h = 0, len(nums)-1
		while l < h:
			m = l+(m-l)//2
			if nums[m] < nums[h]: # 变化点右侧的元素一定小于左侧的元素
				h = m
			else:
				l = m+1
		return nums[l]
'''如果写成nums[m]>=nums[l]，变化点左侧的元素一定大于等于数组第一个
	元素，但是对于区间来到变化点右侧时此条件依旧成立！'''
